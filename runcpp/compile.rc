[sources]:
    src = ['./runcpp/src/caller/caller.cc', './runcpp/src/io/io.cc', './runcpp/src/os/os.c', './runcpp/src/parser/command_generator.cc', './runcpp/src/parser/draw_error.cc', './runcpp/src/parser/import_helper.cc', './runcpp/src/parser/miscellaneous.cc', './runcpp/src/parser/serialize_deserialize_merge.cc', './runcpp/src/parser/parser.cc', './runcpp/src/main/main.cc']

[output]:
    release_output = ['-o', './bin/runcpp']
    debug_output = ['-o', './bin/runcpp_debug']

[release]:
    compiler()
    arguments()[0]
    sources()
    output()[0]

[debug]:
    compiler()
    arguments()[1]
    sources()
    output()[1]

if os == 'linux'
    [install]:
        cmds = ['sudo', 'mv', './bin/runcpp', '/usr/bin/'] # this will need sudo previlages to move or install optimized output file

    [vg]: # vg means valgrind for checking any memory issue or any memory leaks
        cmds = ['valgrind', '--leak-check=full', '--show-leak-kinds=all', '--track-origins=yes', '--verbose', '--log-file=valgrind-out.txt', './bin/runcpp_debug', 'compiler']

    [vgm]: # vgm means valgrind with `massif` for checking memory usage
        cmds = ['valgrind', '--verbose', '--log-file=valgrind-out.txt', '--tool=massif', '--massif-out-file=./massif.out.log', './bin/runcpp_debug', 'compiler']

    [vgc]: # vgc means valgrind with tool as callgrind
        cmds = ['valgrind', '--verbose', '--log-file=valgrind-out.txt', '--tool=callgrind', '--instr-atstart=yes', '--callgrind-out-file=./callgrind.out.log', './bin/runcpp_debug', 'compiler']
endif