[r-sources]:
    src = ['./runcpp/src/caller/caller.cc', './runcpp/src/io/io.cc', './runcpp/src/merger/merger.cc', './runcpp/src/os/os.c', './runcpp/src/parser/parser.cc', './runcpp/src/main/main.cc']

[r-output]:
    release_output = ['-o', './bin/runcpp']
    debug_output = ['-o', './bin/runcpp_debug']

[r-release]:
    compiler()
    arguments()[0]
    r-sources()
    r-output()[0]

[r-debug]:
    compiler()
    arguments()[1]
    r-sources()
    r-output()[1]

if os == 'linux'
    [r-install]:
        cmds = ['sudo', 'mv', './bin/runcpp', '/usr/bin/'] # this will need sudo previlages to move or install optimized output file

    [r-vg]: # vg means valgrind for checking any memory issue or any memory leaks
        cmds = ['valgrind', '--leak-check=full', '--show-leak-kinds=all', '--track-origins=yes', '--verbose', '--log-file=valgrind-out.txt', './bin/runcpp_debug', 'compiler']

    [r-vgm]: # vgm means valgrind with `massif` for checking memory usage
        cmds = ['valgrind', '--verbose', '--log-file=valgrind-out.txt', '--tool=massif', '--massif-out-file=./massif.out.log', './bin/runcpp_debug', 'compiler']

    [r-vgc]: # vgc means valgrind with tool as callgrind
        cmds = ['valgrind', '--verbose', '--log-file=valgrind-out.txt', '--tool=callgrind', '--instr-atstart=yes', '--callgrind-out-file=./callgrind.out.log', './bin/runcpp_debug', 'compiler']
endif