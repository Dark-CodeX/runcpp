[compiler]:
compiler = 'g++'

[sources]:
src = ['./src/caller/caller.cc', './src/io/io.cc', './src/os/os.c', './src/parser/parser.cc', './src/main/main.cc']

[release]:
compiler()
args = ['-std=c++23', '-O3', '-DNDEBUG', '-Os', '-Ofast', '-Og', '-s', '-march=native', '-masm=intel', '-flto=auto', '-funroll-all-loops']
sources()
output = ['-o', './bin/runcpp']

[debug]:
compiler()
args = ['-std=c++23', '-g', '-ggdb3', '-Wall', '-Wextra', '-Wuninitialized', '-Wstrict-aliasing', '-Wshadow', '-pedantic']
sources()
output = ['-o', './bin/runcpp_debug']

[install]:
cmds = ['sudo', 'mv', './bin/runcpp', '/usr/bin/'] # this will need sudo previlages to move or install optimized output file

[vg]: # vg means valgrind for checking any memory issue or any memory leaks
cmds = ['valgrind', '--leak-check=full', '--show-leak-kinds=all', '--track-origins=yes', '--verbose', '--log-file=valgrind-out.txt', './bin/runcpp_debug', 'debug', 'release']

[vgm]: # vgm means valgrind with `massif` for checking memory usage
cmds = ['valgrind', '--verbose', '--log-file=valgrind-out.txt', '--tool=massif', '--massif-out-file=./massif.out.log', './bin/runcpp_debug', 'debug', 'release']